---
import { siteConfig } from "@/config/site";
import { cn } from "@/lib/utils";
import { Icon } from "astro-icon/components";

type Props = {
  className?: string;
};

const { className } = Astro.props;
---

<header
  id="header"
  class={cn(
    "flex flex-col justify-center bg-background h-16  md:pt-0 items-center md:h-18 z-50 sticky top-0 border-transparent border-b",
    className
  )}
>
  <div
    class="relative container h-full flex items-center justify-between w-full"
  >
    <div class="flex items-center gap-6 md:gap-8 lg:gap-10">
      <a href="/" class="hidden items-center space-x-2 md:flex">
        <!-- Dev Place Logo -->
        <svg
          width="25"
          height="25"
          viewBox="0 0 479 467"
          version="1.1"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g id="Group">
            <path
              d="M479 36C479 16.115 462.885 0 443 0L36 0C16.115 0 0 16.115 0 36L0 431C0 450.885 16.115 467 36 467L113.583 467L113.583 214.054L194.556 214.054L194.556 246.689L155.866 246.689L155.866 441.066L194.556 441.066L194.556 467L418.08 467L418.08 441.066L456.771 441.066L456.771 246.689L418.08 246.689L418.08 213.951L479 213.951L479 36ZM294.003 448.969L219.495 448.969L219.495 238.787L294.619 238.787Q326.331 238.787 349.268 251.359Q372.205 263.931 384.521 287.433Q396.836 310.934 396.836 343.673Q396.836 376.513 384.469 400.118Q372.103 423.722 349.063 436.346Q326.023 448.969 294.003 448.969ZM263.933 410.894L292.156 410.894Q321.815 410.894 337.158 394.884Q352.501 378.874 352.501 343.673Q352.501 308.677 337.158 292.769Q321.815 276.862 292.258 276.862L263.933 276.862L263.933 410.894Z"
              id="Rectangle-Subtract"
              fill="currentColor"
              fill-rule="evenodd"
              stroke="none"></path>
          </g>
        </svg>
        <span class="hidden font-bold sm:inline-block">
          {siteConfig.name}
        </span>
      </a>

      <slot name="mobile-nav-header" />

      <div class="hidden md:flex">
        <slot name="left-header" />
      </div>
    </div>

    <!-- logo mobile center -->
    <div
      class="absolute top-1/2 left-1/2 -translate-x-4 -translate-y-4 md:hidden"
    >
      <a href="/" aria-label="DevPlace homepage">
        <svg
          width="25"
          height="25"
          viewBox="0 0 479 467"
          version="1.1"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g id="Group">
            <path
              d="M479 36C479 16.115 462.885 0 443 0L36 0C16.115 0 0 16.115 0 36L0 431C0 450.885 16.115 467 36 467L113.583 467L113.583 214.054L194.556 214.054L194.556 246.689L155.866 246.689L155.866 441.066L194.556 441.066L194.556 467L418.08 467L418.08 441.066L456.771 441.066L456.771 246.689L418.08 246.689L418.08 213.951L479 213.951L479 36ZM294.003 448.969L219.495 448.969L219.495 238.787L294.619 238.787Q326.331 238.787 349.268 251.359Q372.205 263.931 384.521 287.433Q396.836 310.934 396.836 343.673Q396.836 376.513 384.469 400.118Q372.103 423.722 349.063 436.346Q326.023 448.969 294.003 448.969ZM263.933 410.894L292.156 410.894Q321.815 410.894 337.158 394.884Q352.501 378.874 352.501 343.673Q352.501 308.677 337.158 292.769Q321.815 276.862 292.258 276.862L263.933 276.862L263.933 410.894Z"
              id="Rectangle-Subtract"
              fill="currentColor"
              fill-rule="evenodd"
              stroke="none"></path>
          </g>
        </svg>
      </a>
    </div>

    <slot name="right-header" />
  </div>

  <div
    class="flex md:hidden items-center h-fit w-full justify-center bg-background-200"
  >
    <slot name="navigation-toc" />
  </div>

  <script>
    const header = document.getElementById("header");

    /* Auto Hide Scroll Bar */
    window?.addEventListener("scroll", () => {
      if (window.scrollY > 150) {
        header?.classList.remove("border-transparent");
      } else {
        header?.classList.add("border-transparent");
      }
    });

    /* Update Toc Items */
    window?.addEventListener("scroll", () => {
      let current: string | null;
      const tocContainer = document.getElementById("toc-container");

      const sections = document.querySelectorAll(
        ".items-section"
      ) as NodeListOf<HTMLElement>;
      const tocItems = document.querySelectorAll(".toc-item");

      sections.forEach((section) => {
        const sectionTop = section.offsetTop;
        if (window.scrollY + 200 >= sectionTop) {
          current = section.getAttribute("id");
        }
      });

      tocItems.forEach((li) => {
        li.addEventListener("click", () => {
          const section = document.querySelector(
            `${".section-" + li.innerHTML.replace(" ", "-")}`
          );

          window.scrollTo({
            top: (section as HTMLDivElement).offsetTop - 60,
          });
        });
      });

      tocItems.forEach((li) => {
        li.classList.remove("underline");
        if (current && li.classList.contains(current)) {
          li.classList.add("underline");
          tocContainer?.scrollTo({
            top: (li as HTMLDivElement).offsetTop - 60,
          });
        }
      });
    });
  </script>
</header>
